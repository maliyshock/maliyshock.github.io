{"version":3,"sources":["constants.js","reducers/reducerUser.js","reducers/index.js","reducers/reducerGoals.js","reducers/completeGoals.js","history.js","firebase.js","components/AddGoal.js","components/GoalItem.js","components/GoalList.js","actions/index.js","components/CompleteGoalList.js","components/App.js","components/SignUp.js","components/SignIn.js","serviceWorker.js","index.js"],"names":["SIGNED_IN","SET_GOALS","SET_COMPLETED","user","email","combineReducers","goals","state","arguments","length","undefined","action","type","completeGoals","createBrowserHistory","goalRef","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ref","completeGoalRef","AddGoal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","title","push","_this2","react_default","a","createElement","className","placeholder","onChange","e","setState","target","value","onClick","addGoal","Component","connect","GoalItem","_this$props$goal","goal","goalKey","child","remove","_this$props$goal2","completeGoal","GoalList","on","snap","forEach","_goal$val","val","key","setGoals","map","index","components_GoalItem","console","log","CompleteGoalList","_completeGoal$val","setCompletedGoals","set","item","clearGoals","App","auth","signOut","then","error","components_AddGoal","components_GoalList","components_CompleteGoalList","SignUp","password","message","_this$state","createUserWithEmailAndPassword","catch","_this3","signUp","Link","to","SignIn","signInWithEmailAndPassword","signIn","Boolean","window","location","hostname","match","store","createStore","reducer","onAuthStateChanged","history","dispatch","ReactDOM","render","es","BrowserRouter","path","Router","Route","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9a4d6ff.chunk.js","sourcesContent":["export const SIGNED_IN = 'SIGNED_IN';\nexport const SET_GOALS = 'SET_GOALS';\nexport const SET_COMPLETED = 'SET_COMPLETED';","import {SIGNED_IN} from '../constants'\n\nlet user = {\n    email: null\n}\n\nexport default (state = user, action) => {\n    switch(action.type){\n        case SIGNED_IN:\n            const {email} = action;\n            return user = {email};\n        default:\n            return state;\n\n    }\n}","import {combineReducers} from 'redux';\n\nimport goals from './reducerGoals';\nimport user from './reducerUser';\nimport completeGoals from './completeGoals';\n\nexport default combineReducers( { goals, user, completeGoals } )","import {SET_GOALS} from '../constants'\n\nexport default (state = [], action) => {\n    switch(action.type){\n        case SET_GOALS:\n            const { goals } = action;\n            return goals;\n        default:\n            return state;\n    }\n}\n","import { SET_COMPLETED } from \"../constants\";\n\nexport default  (state = [],  action) => {\n    switch(action.type) {\n        case SET_COMPLETED:\n            const {completeGoals} = action;\n            return completeGoals;\n        default:\n            return state;\n    }\n}","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import * as firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyBnp-zpoMNnAE5zbOILVt4ZGh9qoig1oHU\",\n    authDomain: \"goalcoach-b255d.firebaseapp.com\",\n    databaseURL: \"https://goalcoach-b255d.firebaseio.com\",\n    projectId: \"goalcoach-b255d\",\n    storageBucket: \"goalcoach-b255d.appspot.com\",\n    messagingSenderId: \"739488554632\"\n};\n\nexport const firebaseApp = firebase.initializeApp(config);\nexport const goalRef = firebase.database().ref('goals');\nexport const completeGoalRef = firebase.database().ref('completeGoals');","import React, {Component} from 'react';\nimport { goalRef } from '../firebase';\nimport {connect} from 'react-redux'\n\nclass AddGoal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: ''\n        }\n    }\n\n    addGoal() {\n        const { title } = this.state;\n        const { email } = this.props.user;\n        goalRef.push( {email, title} );\n    }\n\n    render() {\n        return(\n            <div>\n                <div className='form-inline'>\n                    <div className='form-group'>\n                        <input\n                            type=\"text\"\n                            placeholder={'Add Goal'}\n                            className={'form-control'}\n                            onChange={ (e) => this.setState( {title: e.target.value} ) }\n                        />\n                    </div>\n                    <button\n                        className={'btn btn-success'}\n                        type={'button'}\n                        onClick={ () => this.addGoal() }\n                    >\n                        Submit\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { user } = state;\n    return {user}\n}\n\nexport default connect(mapStateToProps, null)(AddGoal);","import React, {Component} from 'react';\nimport {completeGoalRef, goalRef} from \"../firebase\";\nimport {connect} from 'react-redux'\n\nclass GoalItem extends Component {\n\n    completeGoal(){\n\n        const {email} = this.props.user;\n        const {title, goalKey} = this.props.goal;\n\n        goalRef.child(goalKey).remove();\n        completeGoalRef.push({email, title});\n    }\n\n    render() {\n        const {title, email} = this.props.goal;\n\n        return(\n            <div>\n                <strong>{title}</strong>\n                <span> was submitted by <em>{email}</em></span>\n                <button\n                    className={'btn btn-sm btn-primary'}\n                    onClick={ ()=>this.completeGoal() }\n                >\n                    Complete\n                </button>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const {user} = state;\n    return {user};\n}\n\nexport default connect(mapStateToProps, null)(GoalItem);","import React, {Component} from 'react';\nimport { connect } from 'react-redux'\nimport { goalRef } from '../firebase';\nimport { setGoals } from '../actions/index';\nimport GoalItem from './GoalItem';\n\nclass GoalList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            goals: []\n        }\n    }\n\n    componentDidMount() {\n        goalRef.on('value', snap => {\n            let goals = [];\n            snap.forEach( goal => {\n                const {email, title} = goal.val();\n                const goalKey = goal.key;\n                goals.push( {email, title, goalKey} );\n            });\n\n            this.props.setGoals(goals);\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                {\n                    this.props.goals.map( (goal, index) => {\n                        return <GoalItem key={index} goal={goal}/>\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    console.log(state);\n    const { goals } = state;\n    return { goals };\n}\n\nexport default connect(mapStateToProps, {setGoals} )(GoalList);","import {SIGNED_IN, SET_GOALS, SET_COMPLETED} from '../constants'\n\nexport function logUser(email) {\n    return {\n        type: SIGNED_IN,\n        email\n    }\n}\n\nexport function setGoals( goals ) {\n    return {\n        type: SET_GOALS,\n        goals\n    }\n}\n\nexport function setCompletedGoals( completeGoals ) {\n    return {\n        type: SET_COMPLETED,\n        completeGoals\n    }\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {completeGoalRef} from '../firebase'\nimport {setCompletedGoals} from '../actions'\n\nclass CompleteGoalList extends Component {\n\n    componentDidMount(){\n        completeGoalRef.on('value', snap => {\n            let completeGoals = [];\n            snap.forEach(completeGoal => {\n                const {email, title} = completeGoal.val();\n                completeGoals.push({email, title});\n            });\n\n            this.props.setCompletedGoals(completeGoals);\n        })\n    }\n\n    clearGoals(){\n        completeGoalRef.set([]);\n    }\n\n\n    render() {\n        return(\n            <div className='app__row'>\n                {\n                    this.props.completeGoals.map( (item,index) => {\n                        return <p key={index}>\n                                    <del>{item.title}</del>\n                                    <span> Completed by <em>{item.email}</em></span>\n                                </p>\n                    }\n                )}\n                <button\n                    className={'btn btn-sm btn-danger'}\n                    onClick={ ()=>this.clearGoals() }\n                >\n                    Clear completed goals list\n                </button>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    const {completeGoals} = state;\n    return {completeGoals};\n}\n\nexport default connect(mapStateToProps, {setCompletedGoals})(CompleteGoalList);","import React, {Component} from 'react';\nimport firebase from 'firebase/app';\nimport { connect } from 'react-redux'\nimport AddGoal from './AddGoal'\nimport GoalList from './GoalList'\nimport CompleteGoalList from './CompleteGoalList'\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    signOut(){\n        firebase.auth().signOut().then(\n                function() {},\n                function(error) {}\n            );\n\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <header>\n                    <small>you logined as {this.props.user.email}</small>\n                </header>\n                <h1>Goals</h1>\n                <AddGoal/>\n                <hr/>\n                <h2>List of goals:</h2>\n                <GoalList/>\n                <hr/>\n                <CompleteGoalList/>\n                <button className={'btn btn-warning'} onClick={ () => this.signOut() }>Sign Out</button>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { user } = state;\n    return {user}\n}\n\nexport default connect(mapStateToProps, null)(App);","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase/app';\n\nclass SignUp extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            error: {\n                message: ''\n            }\n        }\n    }\n\n    signUp() {\n        const { email, password } = this.state;\n\n        firebase.auth().createUserWithEmailAndPassword( email, password )\n            .catch( error => {\n                this.setState( {error } );\n            });\n    }\n\n    render() {\n        return(\n            <div className={'form-inline'}>\n                <h2>Log In</h2>\n                <div className={'form-group'}>\n                    <input\n                        className={'form-control'}\n                        type='email'\n                        placeholder={'email'}\n                        onChange={ (e) => this.setState( { email: e.target.value } ) }\n                    />\n                    <input\n                        className={'form-control'}\n                        type='password'\n                        placeholder={'password'}\n                        onChange={ (e) => this.setState( { password: e.target.value } ) }\n                    />\n                    <button\n                        className={'btn btn-primary'}\n                        type={'button'}\n                        onClick={ () => this.signUp() }>Sign Up</button>\n                </div>\n                <div>{this.state.error.message}</div>\n                <div className=\"instead\"><Link to={'/signin'}>Create account</Link></div>\n            </div>\n        )\n    }\n}\n\nexport default SignUp;","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase/app';\n\n\nclass SignIn extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: {\n                message: ''\n            }\n        }\n    }\n\n    signIn() {\n        const { email, password } = this.state;\n\n        firebase.auth().signInWithEmailAndPassword( email, password )\n            .catch( error => {\n                this.setState( {error } );\n            });\n    }\n\n    render() {\n        return(\n            <div className={'form-inline'}>\n                <h2>Create Account</h2>\n                <div className={'form-group'}>\n                    <input\n                        className={'form-control'}\n                        type='email'\n                        placeholder={'email'}\n                        onChange={ (e) => this.setState( { email: e.target.value } ) }\n                    />\n                    <input\n                        className={'form-control'}\n                        type='password'\n                        placeholder={'password'}\n                        onChange={ (e) => this.setState( { password: e.target.value } ) }\n                    />\n                    <button\n                        className={'btn btn-primary'}\n                        type={'button'}\n                        onClick={ () => this.signIn() }>Sign In</button>\n                </div>\n                <div>{this.state.error.message}</div>\n                <div className=\"instead\"><Link to={'/signup'}>Log in</Link></div>\n            </div>\n        )\n    }\n}\n\nexport default SignIn;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducers'\n\nimport { BrowserRouter, Router, Route } from 'react-router-dom'\nimport firebase from 'firebase/app';\nimport history from './history';\n\nimport './index.css';\nimport App from './components/App';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport * as serviceWorker from './serviceWorker';\nimport { logUser } from './actions';\n\nconst store = createStore(reducer);\n\nfirebase.auth().onAuthStateChanged(user => {\n   if(user) {\n       history.push('/app');\n       store.dispatch(logUser(user.email));\n   } else {\n       history.push('/signup');\n   }\n});\n\nReactDOM.render( <Provider store={store}>\n                    <BrowserRouter path={''}>\n                        <Router history={history}>\n                            <div>\n                                <Route path={'/app'} component={App}/>\n                                <Route path={'/signin'} component={SignIn}/>\n                                <Route path={'/signup'} component={SignUp}/>\n                            </div>\n                        </Router>\n                    </BrowserRouter>\n                </Provider>, document.getElementById('root') );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}